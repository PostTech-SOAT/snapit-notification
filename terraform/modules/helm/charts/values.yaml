# Default values for postgres-chart.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.
chartName: hexburger-pedido

# doesnt work if hpa is enabled
replicaCount:

strategy:
  type: RollingUpdate

containers:

image:
  repository: default-value
  pullPolicy: IfNotPresent
  tag: default-value

imagePullSecrets: []
nameOverride: "hexburger-pedido"
fullnameOverride: "hexburger-pedido-api"

serviceAccount:
  create: true
  automount: true
  annotations: {}
  name: "svc-acc"

podAnnotations: {}
podLabels: {}

podSecurityContext:
  {}
  # fsGroup: 2000

securityContext:
  {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ""
  port: ""
  targetPort: ""
  nodePort: ""

ingress:
  enabled: default-value
  className: ""
  annotations:
    kubernetes.io/ingress.class:
      "nginx"
      # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources:
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  limits:
    cpu: 700m
    memory: 2048Mi
  requests:
    cpu: 400m
    memory: 1024Mi

livenessProbe:
  httpGet:
    path: /actuator/health/liveness
    port: 28082
  initialDelaySeconds: 90
  periodSeconds: 90
  failureThreshould: 2

readinessProbe:
  httpGet:
    path: /actuator/health/readiness
    port: 28082
  initialDelaySeconds:
  failureThreshold: 3
  periodSeconds: 90

autoscaling:
  enabled: true
  minReplicas: 2
  maxReplicas: 10
  targetCPUUtilizationPercentage: 70
  targetMemoryUtilizationPercentage: 65

# Additional volumes on the output Deployment definition.
volumes: {}
# Additional volumeMounts on the output Deployment definition.
volumeMounts: {}

nodeSelector: {}

tolerations: []

affinity: {}

configMapName: default-value

secretName: default-value

env: []

persistentVolume:
  enabled: false
  # storage: 5Gi
  # volumeMode: Filesystem
  # accessModes: ReadWriteMany
  # persistentVolumeReclaimPolicy: Retain
  # storageClassName: standard
  # hostPath: "/mnt/data"

persistentVolumeClaim:
  enabled: false
  # accessModes: ReadWriteMany
  # storageClassName: standard
  # storage: 5Gi
